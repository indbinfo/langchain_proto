1. 2번 context는 데이터프레임에 관한 설명이다.
2. 주어진 데이터프레임은 다음과 같다.
| 컬럼 이름 | 설명 |
| --- | --- |
| SALE_DATE | 날짜 코드 |
| TIME_CD | 시간대 코드 |
| INDV_CP_DV_CD | 개인/법인 코드 |
| MER_SIDO_NM | 상가 지역 이름 |
| MER_CCG_NM | 상가 지역 중계지역 이름 |
| MER_ADNG_NM | 상가 지역 상세 이름 |
| MER_ADNG_NO | 상가 지역 번호 |
| MAIN_BUZ_DESC | 상가 업종명 대분류 |
| TP_GRP_NM | 상가 업종명 중분류 |
| ALS_MER_TPBUZ_NM | 상가 업종명 소분류 |
| CSTMR_SIDO_NM | 고객 도시 이름 |
| CSTMR_CCG_NM | 고객 지역 중계지역 이름 |
| CSTMR_ADNG_NM | 고객 지역 상세 이름 |
| CSTMR_ADNG_NO | 고객 지역 번호 |
| SE_CTGO_CD | 고객 성별 코드 |
| AGE_10_CD | 고객 연령대 코드 |
| LIFE_GB_CD | 고객 생애주기 코드 |
| INDV_INCM_AMT | 고객 소득 금액 |
| MER_CNT | 상가 점포 수 |
| SALE_AMT | 매출액 |
| SALE_CNT | 판매물품 수 |
3.컬럼 SALE_DATE'의 형식은 YYYYMMDD 이다.
4.5번은 'Object' dtype을 가지고 있는 변수들의 Unqiue 값이다.
5.
TIME_CD : ['심야' '오후' '저녁' '오전' '점심' '새벽']
INDV_CP_DV_CD : ['개인' '법인']
SE_CTGO_CD : ['남' '여']
AGE_10_CD : ['30대' '60대' '20대' '40대' '70대이상' '50대' '10대이하']
LIFE_GB_CD : ['1인가구' '노인가구' '초중고자녀' '성인자녀' '신혼영유아']
INDV_INCM_AMT : ['3천만원대' '1천만원대' '4천만원대' '2천만원대' '1천만미만' '5천만원대' '9천만원대' '8천만원대'
 '6천만원대' '1억이상']
MAIN_BUZ_DESC : ['생활' '음식' '쇼핑' '유흥' 'T&E' '기타' '문화' '내구재']
TP_GRP_NM : ['유통업영리' '음식료품' '연료판매' '일반음식' '의료기관' '휴게' '여행업' '기타' '학원' '레져업소' '가전제품'
 '보건/위생' '보험' '용역서비스' '신변잡화' '유통업비영리' '서적/문구' '자동차정비/유지' '숙박업' '건축/자재'
 '문화/취미']
ALS_MER_TPBUZ_NM : ['편의점' '기타전자상거래' '슈퍼마켓' '농축수산품' '주유소' '인터넷PG' '서양음식' '일반한식' '기타음료식품' '의원'
 '약국' '대형할인점' '스넥' '택시' '제과점' '일식회집' '통신판매' '기계공구' '중국음식' '유아원' '기타레져업'
 '기타전기제품' '미용원' '정육점' '생명보험' '화물운송' '조세서비스' 'PG상품권' '농축수산가공품' '한의원' '기타잡화'
 '철도' '농축협직영매장' '기타업종' '항공사' '전기차충전소' '예체능학원' '문구용품' '주점' '자동차정비' '상품권'
 '사무서비스' '노래방' '홈쇼핑' '기타숙박업' '주차장' '보습학원' '목재석재철물' '기타건축자재' '면세점' '일반백화점'
 '화원' '병원' '치과의원' '손해보험' '종합병원' '학습지교육' '일반서적' '이동통신요금' '스크린골프' '위탁급식업'
 '출판인쇄물'] 
6.'MER_SIDO_NM', 'MER_CCG_NM', 'MER_ADNG_NM'는 상점 위치와 관련된 열입니다.
7.'CSTMR_SIDO_NM', 'CSTMR_CCG_NM', 'CSTMR_ADNG_NM'는 고객의 거주지 위치와 관련된 열입니다.
8. 아래는 인천시 지역명 정보입니다.
MER_SIDO_NM: ['인천광역시', 인천']
MER_CCG_NM: ['중구', '미추홀구', '연수구', '남동구', '부평구', '계양구', '서구', '강화군', '옹진군']
MER_ADNG_NM:[연안동','신포동','신흥동','도원동','율목동','동인천동','개항동','영종동','영종1동','영종2동','운서동','용유동'
 ,'만석동','화수1.화평동','화수2동','송현1.2동','송현3동','송림1동','송림2동','송림3.5동','송림4동','송림6동','금창동'
 ,'숭의1·3동','숭의2동','숭의4동','용현1·4동','용현2동','용현3동','용현5동','학익1동','학익2동','도화1동','도화2·3동','주안1동','주안2동','주안3동','주안4동','주안5동','주안6동','주안7동','주안8동','관교동','문학동'
 ,'옥련1동','옥련2동','선학동','연수1동','연수2동','연수3동','청학동','동춘1동','동춘2동','동춘3동','송도1동','송도2동','송도3동','송도4동','송도5동'
 ,'구월동','간석동','만수동','장수동','서창동','운연동','남촌동','수산동','도림동','논현동','고잔동'
 ,'부평동','십정동','산곡동','청천동','삼산동','갈산동','부개동','일신동','구산동'
 ,'효성동','계산동','작전동','서운동','임학동','용종동','병방동','방축동','박촌동','동양동','귤현동','상야동','하야동','평동','노오지동','선주지동','이화동','오류동','갈현동','둑실동','목상동','다남동','장기동'
 ,'백석동','시천동','검암동','경서동','공촌동','연희동','심곡동','가정동','신현동','석남동','원창동','가좌동','마전동','당하동','원당동','대곡동','금곡동','오류동','왕길동','불로동'
 ,'강화읍','신문리','관청리','국화리','남산리','갑곳리','용정리','옥림리','월곳리','대산리','선원면','금월리','연리','지산리','신정리','창리','선행리','냉정리','불은면','두운리','고능리','오두리','넙성리','신현리','삼동암리','삼성리','덕성리','길상면','온수리','선두리','동검리','초지리','장흥리','길직리','화도면','내리','상방리','문산리','덕포리','사기리','동막리','흥왕리',	'여차리','장화리','양도면','하일리','능내리','건평리','인산리','삼흥리','길정리','도장리','조산리','내가면','고천리','오상리','외포리','황청리','구하리','하점면','신봉리','장정리','부근리','삼거리','신삼리','망월리','창후리','이강리','양사면','철산리','덕하리','북성리','교산리',	'인화리',	'송해면',	'솔정리',	'신당리',	'숭뢰리',	'당산리',	'상도리',	'하도리',	'양오리',	'교동면',	'대룡리',	'읍내리',	'상용리',	'봉소리',	'고구리',	'삼선리',	'인사리',	'난정리',	'양갑리',	'동산리','서한리','무학리','지석리','삼산면','석모리','상리','하리','석포리','매음리','서검리','미법리','서도면','주문도리','아차도리','말도리','볼음도리'
 ,'북도면','시도리','신도리','모도리','장봉리','백령면','진촌리','북포리','가을리','연화리','남포리','대청면','대청리','소청리','덕적면','북리','진리','서포리','소야리','울도리','백아리','문갑리','굴업리','영흥면','외리','내리','선재리','자월면','자월리','이작리','승봉리','연평면','연평리']
이것은 질문의 지역을 인식하여 전처리하는 Pandas code 예제이다.
*example1
Q: 서울에서 서양음식의 매출이 가장 높은 지역의 연령대별 매출 데이터를 알려줘.
"""
# 서울의 서양음식 데이터 필터링
filtered_df = df[(df['MER_SIDO_NM'] == '서울특별시')& (df['ALS_MER_TPBUZ_NM'] == '서양음식')]
# 서울 내 각 지역별 서양음식 매출 집계
sales_by_region = filtered_df.groupby('MER_CCG_NM')['SALE_AMT'].sum()
# 서울 내에서 서양음식 매출이 가장 높은 지역 식별
highest_sales_region = sales_by_region.idxmax()
# 최고 매출 지역의 연령대별 매출 집계
highest_sales_region_data = filtered_df[filtered_df['MER_CCG_NM'] == highest_sales_region]
sales_by_age_group = highest_sales_region_data.groupby('AGE_10_CD')['SALE_AMT'].sum()
"""